#!/usr/bin/env ruby

require_relative '../lib/core'
require "tempfile"
require "tmpdir"

LOGGER = Logger.new($stdout)

ROOT_DIR = File.expand_path(File.join(__dir__, '..'))
SITE_DIR = File.join(ROOT_DIR, "docs")

year = Time.now.year
month = Time.now.strftime("%m")
ymd = Time.now.strftime("%Y-%m-%d")

observation_path = File.join(ROOT_DIR, "observations", "#{year}", "#{month}", "#{ymd}.tsv")

observations = []

File.open(observation_path) do |f|
  observations = ObservationsLoader.new(metrics: METRICS).load(f).observations
end

current_conditions = observations.sort_by(&:observed_at).last

current_temp_f = current_conditions[:temp_f]
current_humidity_pct = current_conditions[:humidity_pct]
current_dewpoint_f = current_conditions[:dewpoint_f]

LOGGER.info "current_temp_f: #{current_temp_f}"
LOGGER.info "current_humidity_pct: #{current_humidity_pct}"
LOGGER.info "current_dewpoint_f: #{current_dewpoint_f}"

# Write the current conditions to index.html
template = File.open(File.join(SITE_DIR, "templates", "index.html")).read
template.gsub!( "{{ current_datetime }}", current_conditions.observed_at.strftime('%Y-%m-%d %H:%M') )
template.gsub!( "{{ current_temp_f }}", "#{current_temp_f} 째F" )
template.gsub!( "{{ current_humidity_pct }}", "#{current_humidity_pct} %" )
template.gsub!( "{{ current_dewpoint_f }}", "#{current_dewpoint_f} 째F" )
template.gsub!( "{{ ts }}", "#{Time.now.to_i}" )

File.open(File.join(SITE_DIR, "index.html"), 'w') do |f|
  f.write(template)
end

# Now let's generate a plot of today's temperature


Dir.mktmpdir {|dir|
  gp_file_path = File.join(dir, "gnuplot_script.gp")

  gnuplot_script = <<~GNUPLOT
    set terminal pngcairo size 800,400 enhanced font 'Verdana,10'
    set output '#{File.join(SITE_DIR, "images", "temperature_today.png")}'
    set datafile separator '\t'
    set xdata time
    set timefmt "%Y-%m-%d %H:%M"
    set format x "%H:%M"
    set title "Temperature on #{ymd}"
    set xlabel "Time"
    set ylabel "Temperature (째F)"
    set grid
    plot '#{observation_path}' using 1:13 with lines title 'Temp (째F)'
  GNUPLOT

  puts gnuplot_script

  File.open(gp_file_path, "w") do |gnuplot|
    gnuplot.write(gnuplot_script)
  end

  # Run gnuplot
  cmd = "gnuplot #{gp_file_path}"

  puts "Will run: #{cmd}"

  puts `#{cmd}`
}